# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    admin.post:
        class: App\Admin\PostsAdmin
        arguments: [~ ,App\Entity\Post, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Posts, group: 'Communication' }
    admin.ideabox:
        class: App\Admin\IdeaBoxAdmin
        arguments: [~ ,App\Entity\IdeaBox, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Boite à idées, group: 'Autres' }
    admin.users:
        class: App\Admin\UserAdmin
        arguments: [~ ,App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Utilisateurs, group: 'Autres' }
    admin.canal:
        class: App\Admin\CanalAdmin
        arguments: [~ ,App\Entity\Canal, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Canal, group: 'Communication' }
    admin.message:
        class: App\Admin\MessageAdmin
        arguments: [~ ,App\Entity\Message, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Messages, group: 'Communication' }
    admin.company:
        class: App\Admin\CompanyAdmin
        arguments: [~ ,App\Entity\Company, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Entreprise, group: 'Entreprise' }
    admin.typecompany:
        class: App\Admin\TypeCompagnyAdmin
        arguments: [~ ,App\Entity\TypeCompany, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Type d'entreprise, group: 'Entreprise' }